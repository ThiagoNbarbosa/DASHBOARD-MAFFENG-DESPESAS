Prompt para desenvolvimento no REPLIT  PROMPT ORIGINAL
 Aqui está o prompt atualizado, incluindo as categorias de pagamento, o campo de número do contrato e os dois níveis de login com suas respectivas funcionalidades:
Título: Aplicativo Web "DASHBOARD DE DESPESAS" com HTML, CSS, JavaScript e Supabase (com Autenticação e Roles)
Descrição Geral: Crie um aplicativo web do zero para um "DASHBOARD DE DESPESAS" usando HTML, CSS e JavaScript puro. O aplicativo deve se integrar com o Supabase para gerenciamento de dados e autenticação de usuários, suportando dois níveis de acesso.
Requisitos Principais:
Estrutura Básica:
index.html: Estrutura principal do dashboard, incluindo cabeçalho, área para exibir despesas, botão para adicionar novas despesas e seções para login e resultados (para Admin).
style.css: Estilização básica do dashboard, tornando-o visualmente agradável e responsivo.
script.js: Toda a lógica do aplicativo, incluindo autenticação, manipulação de dados, UI/UX e gráficos.
Funcionalidades do Dashboard:
Autenticação de Usuários:
Implementar um sistema de login- SEM CADASTRO SOMENTE USUÁRIOS CRIADOS MANUALMENTE PELO DEV. 
Dois níveis de acesso:
Usuário (Padrão): Pode apenas inserir novas despesas.
Admin: Pode inserir, editar e apagar despesas. Terá acesso a uma tela especial de "Resultados".
Gerenciamento de sessões de usuário.
Adicionar Despesa:
Implemente um modal (ou formulário embutido) que permita ao usuário adicionar novas despesas.
O formulário deve incluir os seguintes campos:
Item (texto)
Valor (numérico)
Forma de Pagamento (seleção: Pix, Cartão de Crédito, Boleto à Vista, Boleto a Prazo)
Categoria (seleção obrigatória):
Pagamento funcionários
Material
Mão de Obra
Prestador de serviços
Aluguel de ferramentas
Manutenção em veículo
Número do Contrato (texto)
Valor Total (numérico)
Imagem (upload de arquivo, para comprovantes, obrigatório)
Data de Pagamento (data)
Listar Despesas:
Exiba as despesas em uma lista ou tabela no dashboard.
Filtrar Despesas:
Adicione uma funcionalidade de filtro para que o usuário possa visualizar as despesas por Mês.
Para o Admin, os filtros também devem incluir: Categoria e Número do Contrato.
Editar Despesa (Apenas Admin):
Permitir que usuários com perfil "Admin" editem os detalhes de uma despesa existente.
Apagar Despesa (Apenas Admin):
Permitir que usuários com perfil "Admin" apaguem despesas.
Tela "Resultados" (Apenas Admin):
Uma seção exclusiva para usuários "Admin" que apresente:
Um gráfico visualizando as despesas por Categoria.
Funcionalidades de filtro para o gráfico/resultados por: Mês, Categoria e Número do Contrato.
Integração com Supabase:
Autenticação: Utilize supabase-js para gerenciar o login, cadastro e sessões de usuários. Implemente a lógica para atribuir e verificar roles (Admin/Usuário).
Tabela despesas: Crie e utilize uma tabela chamada despesas no Supabase com as seguintes colunas:
id (PK, UUID, DEFAULT gen_random_uuid())
user_id (UUID, FK para auth.users.id, para vincular a despesa ao usuário que a criou)
item (TEXT)
valor (NUMERIC)
forma_pagamento (TEXT)
categoria (TEXT) 
numero_contrato (TEXT) 
valor_total (NUMERIC)
imagem_url (TEXT) - para armazenar a URL da imagem no Supabase Storage.
data_pagamento (DATE)
created_at (TIMESTAMP WITH TIME ZONE, com DEFAULT now())
Supabase Storage: Implemente a funcionalidade de upload de imagens para um bucket no Supabase Storage e armazene a URL da imagem na coluna imagem_url da tabela despesas.
Segurança das Chaves: Não exponha supabaseUrl e supabaseKey diretamente no código do script.js. Use variáveis de ambiente do Replit para armazená-las e acessá-las de forma segura no JavaScript.
Instruções para o Replit Agent:
Inicialize um novo projeto web (HTML, CSS, JS).
Configure o script.js para importar e inicializar o cliente Supabase, utilizando as variáveis de ambiente para as chaves.
Crie a estrutura HTML e CSS conforme descrito, adaptando para as telas de login, dashboard principal e resultados (Admin).
Implemente a lógica JavaScript para:
Autenticação: Login, cadastro e gerenciamento de sessões com Supabase Auth.
Controle de Acesso: Lógica para diferenciar e aplicar permissões de "Usuário" e "Admin".
Modal de Adicionar Despesas: Manipulação do formulário, validação dos novos campos (categoria, numero_contrato) e interação com o Supabase para salvar os dados, incluindo o upload de imagens.
Listagem e Filtragem: Desenvolva a funcionalidade de listar e filtrar as despesas (por mês para todos; por mês, categoria, contrato para Admin).
Edição e Exclusão: Implemente as funcionalidades de edição e exclusão de despesas, acessíveis apenas para usuários "Admin".
Tela de Resultados (Admin): Desenvolva a interface e a lógica para exibir o gráfico de categorias de despesas e os filtros correspondentes. Sugira uma biblioteca simples para gráficos (e.g., Chart.js).
Adicione tratamento de erros básico e feedback ao usuário para todas as operações do Supabase.
